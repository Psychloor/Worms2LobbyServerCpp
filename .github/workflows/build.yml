name: CMake-vcpkg-build-and-release

on:
  push:
    branches: [ "master" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "master" ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    name: Build & Test (${{ matrix.os }} - ${{ matrix.cc }})
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            cc: clang-16
            cxx: clang++-16
            generator: Ninja
          - os: windows-latest
            cc: cl
            cxx: cl
            generator: "Visual Studio 17 2022"

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 0  # Needed for version tagging

      - name: Get version from tag
        id: get_version
        shell: bash
        run: |
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            VERSION="0.0.0"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update && sudo apt-get install -y \
            build-essential \
            cmake \
            clang-16 \
            ninja-build

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: "${{ github.workspace }}/vcpkg"
          vcpkgJsonGlob: '**/vcpkg.json'

      - name: Configure CMake (Linux)
        if: matrix.os == 'ubuntu-latest'
        env:
          CC: clang-16
          CXX: clang++-16
          TAG_VERSION: ${{ env.VERSION }}
        run: |
          cmake -B ${{github.workspace}}/build \
          -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
          -DCMAKE_TOOLCHAIN_FILE=$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake \
          -GNinja

      - name: Configure CMake (Windows)
        if: matrix.os == 'windows-latest'
        env:
          TAG_VERSION: ${{ env.VERSION }}
        run: |
          cmake -B ${{github.workspace}}/build `
          -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} `
          -DCMAKE_TOOLCHAIN_FILE=${{env.VCPKG_ROOT}}/scripts/buildsystems/vcpkg.cmake

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{env.BUILD_TYPE}} --output-on-failure

  release:
    name: Create Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}