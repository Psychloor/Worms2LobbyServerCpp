name: CMake Build and Release

on:
  push:
    branches: [ "master" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "master" ]

permissions:
  contents: write


jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            compiler: msvc
            cpp_compiler: cl
            c_compiler: cl
            artifact_name: WormsServer-Windows

          - os: ubuntu-latest
            compiler: gcc
            cpp_compiler: g++
            c_compiler: gcc
            artifact_name: WormsServer-Linux

    steps:
      - uses: actions/checkout@v4

      - name: Install vcpkg
        shell: bash
        run: |
          git clone https://github.com/Microsoft/vcpkg.git
          ./vcpkg/bootstrap-vcpkg.sh

      - name: Cache vcpkg packages
        uses: actions/cache@v4
        with:
          path: |
            ./vcpkg/installed
            ${{ github.workspace }}/.cmake
          key: vcpkg-${{ matrix.os }}-${{ hashFiles('vcpkg.json') }}

      - name: Install dependencies
        shell: bash
        run: |
          ./vcpkg/vcpkg install
      - name: Configure CMake
        run: >
          cmake -B build
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
          -S .

      - name: Build
        run: cmake --build build --config Release

      - name: Package
        shell: bash
        run: |
          mkdir -p dist
          if [ "${{ runner.os }}" == "Windows" ]; then
            cp build/Release/WormsServer.exe "dist/WormsServer.exe"
            cd dist && 7z a "../${{ matrix.artifact_name }}.zip" "WormsServer.exe"
          else
            cp build/WormsServer "dist/WormsServer"
            cd dist && tar -czf "../${{ matrix.artifact_name }}.tar.gz" "WormsServer"
          fi

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.artifact_name }}.*
          retention-days: 7

  release:
    permissions:
      contents: write
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Explicitly specify the token
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/**/*.zip
            artifacts/**/*.tar.gz
          draft: false
          prerelease: false
          generate_release_notes: true